{"version":3,"sources":["components/ProjectCard.js","data/projectData.js","pages/Projects.js"],"names":["PREFIX","classes","root","githubLinksAnchor","LanguageChip","StyledCard","styled","Card","theme","backgroundColor","padding","color","margin","borderRadius","fontWeight","ProjectCard","heading","description","languages","linkAriaLabel","repoLink","siteLink","shopLink","getIcon","language","raised","className","CardHeader","id","title","CardContent","Typography","variant","map","Chip","icon","label","CardActions","sx","display","justifyContent","alignItems","alignContents","borderTop","Tooltip","arrow","IconButton","role","transition","boxShadow","transform","href","size","cardData","projectsLink","projectsCard","StyledBox","Box","minHeight","Projects","Toolbar","align","gutterBottom","Grid","container","spacing","alignContent","data","key","item","lg","md","sm","xs"],"mappings":"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","file":"static/js/12.a50c018e.chunk.js","sourcesContent":["import React from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport { Chip, IconButton, Tooltip, Typography } from \"@mui/material\";\nimport { FiGithub, FiExternalLink } from \"react-icons/fi\";\nimport {\n  SiCss3,\n  SiHtml5,\n  SiJava,\n  SiJavascript,\n  SiJquery,\n  SiKotlin,\n  SiMaterialui,\n  SiNextdotjs,\n  SiReact,\n  SiRedux,\n  SiSqlite,\n  SiStyledcomponents,\n  SiTailwindcss,\n  SiGoogleplay,\n} from \"react-icons/si\";\nimport PropTypes from \"prop-types\";\nconst PREFIX = \"ProjectCard\";\n\nconst classes = {\n  root: `${PREFIX}-root`,\n  githubLinksAnchor: `${PREFIX}-githubLinksAnchor`,\n  LanguageChip: `${PREFIX}-LanguageChip`,\n};\n\nconst StyledCard = styled(Card)(({ theme }) => ({\n  [`&.${classes.root}`]: {\n    backgroundColor: \"#ffffff\",\n    padding: \"1rem\",\n  },\n\n  [`& .${classes.githubLinksAnchor}`]: {\n    \"&:visited\": {\n      color: \"#000000\",\n    },\n    \"&:link\": {\n      color: \"#000000\",\n    },\n  },\n\n  [`& .${classes.LanguageChip}`]: {\n    margin: \"0.3rem\",\n    borderRadius: \"5px\",\n    padding: \"0.5rem\",\n    fontWeight: \"bold\",\n  },\n}));\n\nexport default function ProjectCard({\n  heading,\n  description,\n  languages,\n  linkAriaLabel,\n  repoLink,\n  siteLink,\n  shopLink,\n}) {\n  //a function that find the correct icon for a given language array\n  const getIcon = (language) => {\n    switch (language) {\n      case \"Kotlin\":\n        return <SiKotlin />;\n      case \"React Native\":\n      case \"ReactJS\":\n        return <SiReact />;\n      case \"Redux toolkit\":\n        return <SiRedux />;\n      case \"Tailwind CSS\":\n        return <SiTailwindcss />;\n      case \"NextJS\":\n        return <SiNextdotjs />;\n      case \"Material UI\":\n        return <SiMaterialui />;\n      case \"Styled components\":\n        return <SiStyledcomponents />;\n      case \"HTML\":\n        return <SiHtml5 />;\n      case \"CSS\":\n        return <SiCss3 />;\n      case \"Javascript\":\n        return <SiJavascript />;\n      case \"JQuery\":\n        return <SiJquery />;\n      case \"Java\":\n        return <SiJava />;\n      case \"SQLite\":\n        return <SiSqlite />;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <StyledCard raised className={classes.root}>\n      <CardHeader id=\"heading\" title={heading} data-testid=\"projectHeading\" />\n      <CardContent>\n        <Typography variant=\"body2\">{description}</Typography>\n        <Typography variant=\"overline\">\n          <br />\n          {languages.map((language) => (\n            <Chip\n              icon={getIcon(language)}\n              color=\"secondary\"\n              key={language}\n              label={language}\n              className={classes.LanguageChip}\n              data-testid=\"languageChip\"\n            />\n          ))}\n        </Typography>\n      </CardContent>\n      <CardActions\n        sx={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          alignContents: \"center\",\n          borderTop: \"1px solid #e0e0e0\",\n        }}\n      >\n        <Tooltip title=\"Github Repo\" arrow>\n          <IconButton\n            data-testid=\"githublink\"\n            data-block=\"projectlink\"\n            role=\"button\"\n            color=\"secondary\"\n            sx={{\n              transition: \"all 0.3s ease-out\",\n              \"&:hover\": {\n                boxShadow: \"0px 0px 10px #e0e0e0\",\n                transform: \"scale(1.2)\",\n                transition: \"all 0.13s ease-in\",\n              },\n            }}\n            aria-label={\"Link to github Repo of \" + heading}\n            href={repoLink}\n            size=\"large\"\n          >\n            <FiGithub />\n          </IconButton>\n        </Tooltip>\n\n        {shopLink && (\n          <Tooltip title=\"Play Store Link\" arrow>\n            <IconButton\n              data-testid=\"shoplink\"\n              data-block=\"shoplink\"\n              role=\"button\"\n              color=\"secondary\"\n              sx={{\n                transition: \"all 0.3s ease-out\",\n                \"&:hover\": {\n                  boxShadow: \"0px 0px 10px #e0e0e0\",\n                  transform: \"scale(1.2)\",\n                  transition: \"all 0.13s ease-in\",\n                },\n              }}\n              aria-label={linkAriaLabel}\n              href={shopLink}\n              size=\"large\"\n            >\n              <SiGoogleplay />\n            </IconButton>\n          </Tooltip>\n        )}\n\n        {siteLink ? (\n          <Tooltip title=\"Live Site Link\" arrow>\n            <IconButton\n              data-testid=\"externalSiteLink\"\n              data-block=\"projectLinkToSite\"\n              role=\"button\"\n              color=\"secondary\"\n              sx={{\n                transition: \"all 0.3s ease-out\",\n                \"&:hover\": {\n                  boxShadow: \"0px 0px 10px #e0e0e0\",\n                  transform: \"scale(1.2)\",\n                  transition: \"all 0.13s ease-in\",\n                },\n              }}\n              aria-label={\"Link to live website of \" + heading}\n              href={siteLink}\n              size=\"large\"\n            >\n              <FiExternalLink />\n            </IconButton>\n          </Tooltip>\n        ) : null}\n      </CardActions>\n    </StyledCard>\n  );\n}\n\nProjectCard.propTypes = {\n  heading: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  languages: PropTypes.arrayOf(PropTypes.string).isRequired,\n  linkAriaLabel: PropTypes.string.isRequired,\n  repoLink: PropTypes.string.isRequired,\n  siteLink: PropTypes.string,\n  shopLink: PropTypes.string,\n};\n","export const cardData = [\n  {\n    heading: \"Nimaz\",\n    description:\n      \"An app that calculates Muslim Prayer times and displays it in a clean UI. Features are Alarms for each prayer, Tasbeeh with list of Dikhr, Qibla compass, Names of Allah with translation and transliterations, and full Quran in English and Urdu translations separated by juz and surah\",\n    languages: [\"Kotlin\"],\n    linkAriaLabel: \"link to Google play store for Nimaz App\",\n    shopLink:\n      \"https://play.google.com/store/apps/details?id=com.arshadshah.nimaz&pcampaignid=pcampaignidMKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1\",\n    repoLink: \"https://github.com/arshad-shah/Nimaz\",\n    siteLink: \"https://nimaz.arshadshah.com/\",\n  },\n  {\n    heading: \"Uber Clone\",\n    description:\n      \"A clone app of uber in react native, for the purpose of learning redux state management. it uses google api's for autocomplete, distance measurement, and map for start and finish of journey.\",\n    languages: [\"React Native\", \"Redux toolkit\", \"Tailwind CSS\"],\n    linkAriaLabel: \"link to Github for Uber Clone repo\",\n    repoLink: \"https://github.com/arshad-shah/uber-clone\",\n  },\n  {\n    heading: \"MedicineReminder\",\n    description:\n      \"A reminder designed for medicine doses, the primary focus of the app is to show a notification when it is time for a medicine dose, it uses sqlite for storage of the reminders, uses alarm manager for showing notifications.\",\n    languages: [\"Java\", \"SQLite\"],\n    linkAriaLabel: \"link to Github for MedicineReminder App\",\n    repoLink: \"https://github.com/arshad-shah/medicineReminder\",\n  },\n  {\n    heading: \"Chat App\",\n    description:\n      \"A chat app created in nextjs, styled components, and Material UI with firebase database for storage to learn server side rendering. it uses firebase authentication for login and signup, and firebase firestore for storage of messages. \",\n    languages: [\"ReactJS\", \"NextJS\", \"Material UI\", \"Styled components\"],\n    linkAriaLabel: \"link to Github for Chat App repo\",\n    repoLink: \"https://github.com/arshad-shah/chatty_v1.0\",\n  },\n  {\n    heading: \"Portfolio version 1.0\",\n    description:\n      \"The version 1 of my Portfolio site that contains all the work i have done so far. Includes work from college such as exercises, projects and also from outside college such as the android app.This version is written in pure HTML, CSS and javascript with a pinch of jquery.\",\n    languages: [\"HTML\", \"CSS\", \"Javascript\", \"JQuery\"],\n    linkAriaLabel: \"link to Github for portfolio version 1\",\n    repoLink: \"https://github.com/arshad-shah/portfoliov1\",\n    siteLink: \"https://arshad-shah.github.io/portfoliov1/\",\n  },\n  {\n    heading: \"Portfolio version 2.0\",\n    description:\n      \"The current version of the Portfolio site that contains all the work i have done so far.Includes work from college such as exercises, projects and also from outside college such as the android app.This is the second version written in javascript using the React framework, and designed using Material UI. The site has google analytics implemented with google tag manager and collects data for click events and page views.\",\n    languages: [\"HTML\", \"Javascript\", \"ReactJS\", \"Material UI\"],\n    linkAriaLabel: \"link to Github for portfolio version 2\",\n    repoLink: \"https://github.com/arshad-shah/portfolio-v2\",\n  },\n];\n","import { Box, Grid, Toolbar, Typography } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport React from \"react\";\nimport ProjectCard from \"../components/ProjectCard\";\nimport { cardData } from \"../data/projectData\";\nconst PREFIX = \"Projects\";\n\nconst classes = {\n  root: `${PREFIX}-root`,\n  projectsLink: `${PREFIX}-projectsLink`,\n  projectsCard: `${PREFIX}-projectsCard`,\n  githubLinksAnchor: `${PREFIX}-githubLinksAnchor`,\n};\n\nconst StyledBox = styled(Box)(({ theme }) => ({\n  [`&.${classes.root}`]: {\n    backgroundColor: \"#ffffff\",\n    padding: \"1rem\",\n  },\n\n  [`& .${classes.projectsLink}`]: {\n    minHeight: 0,\n  },\n\n  [`& .${classes.projectsCard}`]: {},\n\n  [`& .${classes.githubLinksAnchor}`]: {\n    \"&:visited\": {\n      color: \"#000000\",\n    },\n    \"&:link\": {\n      color: \"#000000\",\n    },\n  },\n}));\n\nexport default function Projects() {\n  return (\n    <StyledBox className={classes.root}>\n      <Toolbar className={classes.projectsLink} id=\"projects\" />\n      <Typography align=\"center\" gutterBottom variant=\"h2\">\n        Projects\n      </Typography>\n      <Grid\n        container\n        spacing={4}\n        alignItems=\"center\"\n        alignContent=\"center\"\n        justifyContent=\"space-around\"\n      >\n        {cardData.map((data, key) => (\n          <Grid\n            key={key}\n            aria-label=\"ProjectCard\"\n            item\n            lg={4}\n            md={6}\n            sm={10}\n            xs={12}\n          >\n            <ProjectCard\n              heading={data.heading}\n              description={data.description}\n              languages={data.languages}\n              linkAriaLabel={data.linkAriaLabel}\n              repoLink={data.repoLink}\n              siteLink={data.siteLink}\n              shopLink={data.shopLink}\n            />\n          </Grid>\n        ))}\n      </Grid>\n    </StyledBox>\n  );\n}\n"],"sourceRoot":""}